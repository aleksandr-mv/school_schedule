version: '3.8'

services:
  # Master узлы
  redis-node-1:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-1
    command: >
      redis-server 
      --port 7000
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7000:7000"
    volumes:
      - redis_cluster_1_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7000", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  redis-node-2:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-2
    command: >
      redis-server 
      --port 7001
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7001:7001"
    volumes:
      - redis_cluster_2_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7001", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  redis-node-3:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-3
    command: >
      redis-server 
      --port 7002
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7002:7002"
    volumes:
      - redis_cluster_3_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7002", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  # Replica узлы
  redis-node-4:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-4
    command: >
      redis-server 
      --port 7003
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7003:7003"
    volumes:
      - redis_cluster_4_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7003", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  redis-node-5:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-5
    command: >
      redis-server 
      --port 7004
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7004:7004"
    volumes:
      - redis_cluster_5_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7004", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  redis-node-6:
    image: redis:7.2.5-alpine3.20
    container_name: redis-node-6
    command: >
      redis-server 
      --port 7005
      --cluster-enabled yes 
      --cluster-config-file nodes.conf 
      --cluster-node-timeout 5000 
      --appendonly yes
      --bind 0.0.0.0
    ports:
      - "7005:7005"
    volumes:
      - redis_cluster_6_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7005", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - school_net

  # Инициализация кластера (выполняется один раз)
  redis-cluster-init:
    image: redis:7.2.5-alpine3.20
    container_name: redis-cluster-init
    depends_on:
      redis-node-1:
        condition: service_healthy
      redis-node-2:
        condition: service_healthy
      redis-node-3:
        condition: service_healthy
      redis-node-4:
        condition: service_healthy
      redis-node-5:
        condition: service_healthy
      redis-node-6:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Ожидаем готовности узлов Redis...' &&
        sleep 15 &&
        echo 'Создаем Redis Cluster (3 master + 3 replica)...' &&
        redis-cli --cluster create 
        redis-node-1:7000 redis-node-2:7001 redis-node-3:7002 
        redis-node-4:7003 redis-node-5:7004 redis-node-6:7005 
        --cluster-replicas 1 --cluster-yes &&
        echo 'Redis Cluster успешно создан!' &&
        echo '=== Информация об узлах кластера ===' &&
        redis-cli -c -h redis-node-1 -p 7000 cluster nodes &&
        echo '=== Статистика кластера ===' &&
        redis-cli -c -h redis-node-1 -p 7000 cluster info &&
        echo '=== Тестируем кластер ===' &&
        redis-cli -c -h redis-node-1 -p 7000 set test-key 'Привет от кластера!' &&
        redis-cli -c -h redis-node-2 -p 7001 get test-key &&
        echo 'Кластер готов к работе!'
      "
    networks:
      - school_net
    restart: "no"

volumes:
  redis_cluster_1_data:
  redis_cluster_2_data:
  redis_cluster_3_data:
  redis_cluster_4_data:
  redis_cluster_5_data:
  redis_cluster_6_data:

networks:
  school_net:
    external: true