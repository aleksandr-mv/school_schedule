services:
  prometheus:
    image: prom/prometheus:v3.3.1 
    container_name: prometheus
    env_file:
      - .env
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml # Монтируем конфигурацию Prometheus
      - prometheus_data:/prometheus # Подключаем volume для хранения данных Prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml' # Указываем путь к файлу конфигурации
      - '--storage.tsdb.path=/prometheus' # Директория для хранения временных рядов
      - '--web.enable-lifecycle' # Включает HTTP API для управления Prometheus
      - '--web.enable-remote-write-receiver' # Включает поддержку remote write API для приема метрик
    restart: unless-stopped
    networks:
      - school_net
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--spider", "http://localhost:${PROMETHEUS_PORT}/-/healthy" ]
      interval: ${PROMETHEUS_HEALTHCHECK_INTERVAL}
      timeout: ${PROMETHEUS_HEALTHCHECK_TIMEOUT}
      retries: ${PROMETHEUS_HEALTHCHECK_RETRIES}
      start_period: ${PROMETHEUS_HEALTHCHECK_START_PERIOD}


  grafana:
    image: grafana/grafana:12.0.0
    container_name: grafana
    env_file:
      - .env
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana # Подключаем volume для хранения данных Grafana
      - ./grafana/provisioning:/etc/grafana/provisioning # Монтируем директорию с настройками для автоматического провижининга
      - ./grafana/dashboards:/var/lib/grafana/dashboards # Монтируем директорию с дашбордами
    restart: unless-stopped
    networks:
      - school_net
    healthcheck:
      test: [ "CMD", "wget", "--quiet", "--spider", "http://localhost:${GRAFANA_PORT}/api/health" ]
      interval: ${GRAFANA_HEALTHCHECK_INTERVAL}
      timeout: ${GRAFANA_HEALTHCHECK_TIMEOUT}
      retries: ${GRAFANA_HEALTHCHECK_RETRIES}
      start_period: ${GRAFANA_HEALTHCHECK_START_PERIOD}
    depends_on:
      prometheus:
        condition: service_healthy


volumes:
  prometheus_data: # Именованный том для хранения данных Prometheus
  grafana_data: # Именованный том для хранения данных Grafana

networks:
  school_net:
    external: true
