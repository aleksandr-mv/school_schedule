version: "3.8"

services:
  prometheus:
    image: prom/prometheus:v3.3.1
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - microservices-net

  grafana:
    image: grafana/grafana:12.0.0
    container_name: grafana
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - microservices-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.133.0
    container_name: otel-metrics-collector
    depends_on:
      prometheus:
        condition: service_healthy
    ports:
      - "${OTEL_GRPC_PORT:-4322}:4317"  # Metrics endpoint (уникальный порт)
      - "${OTEL_COLLECTOR_METRICS_PORT:-8890}:8888"
      - "${CORE_OTEL_COLLECTOR_HEALTH_PORT:-13135}:13133"
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml:ro
    command: ["/otelcol-contrib", "--config", "/etc/otel-collector-config.yaml"]
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:13133"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - microservices-net

volumes:
  prometheus_data:
  grafana_data:

networks:
  microservices-net:
    external: true
