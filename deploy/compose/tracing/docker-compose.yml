version: "3.8"

services:
  cassandra:
    image: cassandra:5.0.5
    container_name: cassandra
    environment:
      CASSANDRA_CLUSTER_NAME: "jaeger-cluster"
      CASSANDRA_NUM_TOKENS: 16
      CASSANDRA_DC: "dc1"
      CASSANDRA_RACK: "rack1"
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'DESCRIBE KEYSPACES'"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - microservices-net

  jaeger:
    image: jaegertracing/jaeger:2.6.0
    container_name: jaeger
    depends_on:
      cassandra:
        condition: service_healthy
    ports:
      - "${JAEGER_UI_PORT:-16686}:16686"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      STORAGE_TYPE: cassandra
      CASSANDRA_CONTACT_POINTS: cassandra
      CASSANDRA_KEYSPACE: jaeger_v1_datastore
      CASSANDRA_USERNAME: "${CASSANDRA_USERNAME:-}"
      CASSANDRA_PASSWORD: "${CASSANDRA_PASSWORD:-}"
      CASSANDRA_SCHEMA_CREATE: "true"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${JAEGER_UI_PORT:-16686}"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s
    restart: unless-stopped
    networks:
      - microservices-net

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.133.0
    container_name: otel-collector
    depends_on:
      jaeger:
        condition: service_started
    ports:
      - "${OTEL_GRPC_PORT:-4317}:4317"
      - "${OTEL_COLLECTOR_METRICS_PORT:-8888}:8888"
      - "${CORE_OTEL_COLLECTOR_HEALTH_PORT:-13133}:13133"
    volumes:
      - ./otel-config.yaml:/etc/otel-collector-config.yaml:ro
    command: ["/otelcol-contrib", "--config", "/etc/otel-collector-config.yaml"]
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:${CORE_OTEL_COLLECTOR_HEALTH_PORT:-13133}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - microservices-net

volumes:
  cassandra_data:

networks:
  microservices-net:
    external: true
