logger:
  level: "${LOG_LEVEL}"
  as_json: ${LOG_JSON}
  otlp:
    enable: ${ENABLE}
    endpoint: "${ENDPOINT}"
    shutdown_timeout: ${SHUTDOWN_TIMEOUT}

tracing:
  enable: ${TRACING_ENABLE}
  endpoint: "${TRACING_ENDPOINT}"
  timeout: "${TRACING_TIMEOUT}"
  sample_ratio: ${TRACING_SAMPLE_RATIO}
  retry_enabled: ${TRACING_RETRY_ENABLED}
  retry_initial_interval: "${TRACING_RETRY_INITIAL_INTERVAL}"
  retry_max_interval: "${TRACING_RETRY_MAX_INTERVAL}"
  retry_max_elapsed_time: "${TRACING_RETRY_MAX_ELAPSED_TIME}"
  enable_trace_context: ${TRACING_ENABLE_TRACE_CONTEXT}
  enable_baggage: ${TRACING_ENABLE_BAGGAGE}
  shutdown_timeout: "${TRACING_SHUTDOWN_TIMEOUT}"

metric:
  enable: ${METRIC_ENABLE}
  endpoint: "${METRIC_ENDPOINT}"
  timeout: "${METRIC_TIMEOUT}"
  namespace: "${METRIC_NAMESPACE}"
  app_name: "${METRIC_APP_NAME}"
  export_interval: "${METRIC_EXPORT_INTERVAL}"
  shutdown_timeout: "${METRIC_SHUTDOWN_TIMEOUT}"
  bucket_boundaries: ${METRIC_BUCKET_BOUNDARIES}

app:
  name: "${NAME}"
  environment: "${ENVIRONMENT}"
  version: "${VERSION}"
  migrations_dir: "${MIGRATIONS_DIR}"

grpc_server:
  host: "${GRPC_HOST}"
  port: ${GRPC_PORT}
  timeout: "${GRPC_TIMEOUT}"
  idle_timeout: "${GRPC_IDLE_TIMEOUT}"
  shutdown_timeout: "${GRPC_SHUTDOWN_TIMEOUT}"

grpc_client_limits:
  max_recv_msg_size: ${GRPC_MAX_RECV_MSG_SIZE}
  max_send_msg_size: ${GRPC_MAX_SEND_MSG_SIZE}
  timeout: "${GRPC_CLIENT_TIMEOUT}"

database:
  postgres:
    connection:
      host: "${DB_HOST}"
      port: ${DB_PORT}
      user: "${POSTGRES_USER}"
      password: "${POSTGRES_PASSWORD}"
      database: "${POSTGRES_DB}"
      application_name: "${DB_APPLICATION_NAME}"
    pool:
      max_cons: ${POOL_MAX_CONS}
      min_cons: ${POOL_MIN_CONS}
      max_conn_lifetime: "${POOL_MAX_CONN_LIFETIME}"
      max_conn_idle_time: "${POOL_MAX_CONN_IDLE_TIME}"
      health_check_period: "${HEALTH_CHECK_PERIOD}"
      connect_timeout: "${CONNECT_TIMEOUT}"
      shutdown_timeout: "${SHUTDOWN_TIMEOUT}"
    tls:
      enabled: ${TLS_ENABLED}
      ssl_mode: "${SSL_MODE}"
      ssl_cert: "${SSL_CERT}"
      ssl_key: "${SSL_KEY}"
      ssl_root_cert: "${SSL_ROOT_CERT}"
      ssl_password: "${SSL_PASSWORD}"
      ssl_crl: "${SSL_CRL}"
      ssl_compression: ${SSL_COMPRESSION}

redis:
  enabled: ${REDIS_ENABLED}
  connection:
    host: "${REDIS_HOST}"
    port: ${REDIS_PORT}
    password: "${REDIS_PASSWORD}"
    database: ${REDIS_DATABASE}
  pool:
    pool_size: ${REDIS_POOL_SIZE}
    min_idle: ${REDIS_MIN_IDLE}
    max_retries: ${REDIS_MAX_RETRIES}
    dial_timeout: "${REDIS_DIAL_TIMEOUT}"
    read_timeout: "${REDIS_READ_TIMEOUT}"
    write_timeout: "${REDIS_WRITE_TIMEOUT}"
    pool_timeout: "${REDIS_POOL_TIMEOUT}"
    idle_timeout: "${REDIS_IDLE_TIMEOUT}"
    idle_check_freq: "${REDIS_IDLE_CHECK_FREQ}"

kafka:
  brokers: "${KAFKA_BROKERS}"
  consumers:
    user_created:
      topic: "${KAFKA_USER_CREATED_TOPIC}"
      group_id: "${KAFKA_USER_CREATED_GROUP_ID}"
      enabled: ${KAFKA_ENABLED}
  default_role_id: "${RBAC_DEFAULT_ROLE_ID}"
