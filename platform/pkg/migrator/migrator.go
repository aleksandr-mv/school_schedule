package migrator

import (
	"context"
	"database/sql"

	"github.com/pressly/goose/v3"
	"go.uber.org/zap"

	"github.com/Alexander-Mandzhiev/school_schedule/platform/pkg/logger"
)

type Migrator struct {
	db            *sql.DB
	migrationsDir string
}

// NewMigrator —Å–æ–∑–¥–∞—ë—Ç –º–∏–≥—Ä–∞—Ç–æ—Ä, —Å–ø–æ—Å–æ–±–Ω—ã–π –ø—Ä–∏–º–µ–Ω—è—Ç—å SQL-–º–∏–≥—Ä–∞—Ü–∏–∏ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ migrationsDir
// –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π *sql.DB.
func NewMigrator(db *sql.DB, migrationsDir string) *Migrator {
	return &Migrator{db: db, migrationsDir: migrationsDir}
}

// Up –ø—Ä–∏–º–µ–Ω—è–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –≤–µ—Ä—Å–∏–∏.
// –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∏ –æ—à–∏–±–∫–∏; –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ—ë –≤—ã–∑—ã–≤–∞—é—â–µ–º—É –∫–æ–¥—É.
func (m *Migrator) Up(ctx context.Context) error {
	logger.Info(ctx,
		"üîÑ [Migrations] –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏",
		zap.String("dir", m.migrationsDir),
	)

	if err := goose.Up(m.db, m.migrationsDir); err != nil {
		logger.Error(ctx,
			"‚ùå [Migrations] –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏",
			zap.Error(err),
			zap.String("dir", m.migrationsDir),
		)
		return err
	}

	logger.Info(ctx,
		"‚úÖ [Migrations] –í—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã",
		zap.String("dir", m.migrationsDir),
	)
	return nil
}
