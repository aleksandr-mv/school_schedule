syntax = "proto3";

package role.v1;

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "common/v1/role.proto";
import "common/v1/annotations.proto";

option go_package = "github.com/aleksandr-mv/school_schedule/shared/pkg/proto/role/v1;role_v1";

// =============================================================================
// RoleService (role.v1)
// =============================================================================

service RoleService {
  // Создание новой роли
  rpc Create(CreateRequest) returns (CreateResponse) {
    option (common.v1.permission) = "role:write";
  }

  // Обновление роли
  rpc Update(UpdateRequest) returns (google.protobuf.Empty) {
    option (common.v1.permission) = "role:write";
  }

  // Удаление роли
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty) {
    option (common.v1.permission) = "role:write";
  }

  // Получение роли по ID
  rpc Get(GetRequest) returns (GetResponse) {
    option (common.v1.permission) = "role:read";
  }

  // Получение списка ролей
  rpc List(ListRequest) returns (ListResponse) {
    option (common.v1.permission) = "role:read";
  }

}

// =============================================================================
// Create
// =============================================================================

// Запрос на создание новой роли
message CreateRequest {
  string name = 1 [(validate.rules).string.min_len = 2, (validate.rules).string.max_len = 50];
  string description = 2;
}

// Ответ с ID созданной роли
message CreateResponse {
  string role_id = 1 [(validate.rules).string.uuid = true];
}


// =============================================================================
// Update
// =============================================================================

// Запрос на обновление роли
message UpdateRequest {
  string role_id = 1 [(validate.rules).string.uuid = true];
  optional string name = 2 [(validate.rules).string.min_len = 2, (validate.rules).string.max_len = 50];
  optional string description = 3;
}

// =============================================================================
// Delete
// =============================================================================

// Запрос на удаление роли по ID
message DeleteRequest {
  string role_id = 1 [(validate.rules).string.uuid = true];
}

// =============================================================================
// Get
// =============================================================================

// Запрос на получение роли по ID
message GetRequest {
  string role_id = 1 [(validate.rules).string.uuid = true];
}

// Ответ с ролью и её правами
message GetResponse {
  common.v1.RoleWithPermissions data = 1;
}

// =============================================================================
// List
// =============================================================================

// Запрос на получение списка ролей
message ListRequest {
}

// Ответ со списком ролей
message ListResponse {
  repeated common.v1.Role data = 1;
}

