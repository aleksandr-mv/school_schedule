syntax = "proto3";

package auth.v1;

import "validate/validate.proto";
import "common/v1/session.proto";
import "common/v1/annotations.proto";
import "google/api/annotations.proto";

option go_package = "github.com/Alexander-Mandzhiev/school_schedule/shared/pkg/proto/auth/v1;auth_v1";

// =============================================================================
// AuthService (auth.v1)
// =============================================================================

service AuthService {
  // Аутентификация пользователя
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (common.v1.public) = true;
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
  }

  // Получение информации о текущей сессии
  rpc Whoami(WhoamiRequest) returns (WhoamiResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/whoami"
    };
  }

  // Выход из системы
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
  }
}

// Запрос на аутентификацию
message LoginRequest {
  string login = 1 [(validate.rules).string.min_len = 3];
  string password = 2 [(validate.rules).string.min_len = 6];
}

// Ответ на аутентификацию
message LoginResponse {
  string session_id = 1 [(validate.rules).string.uuid = true];
}

// Запрос информации о текущей сессии (пустой - данные берутся из контекста)
message WhoamiRequest {
}

// Ответ с информацией о текущей сессии
message WhoamiResponse {
  common.v1.WhoamiInfo info = 1 [(validate.rules).message.required = true];
}

// Запрос на выход из системы
message LogoutRequest {
}

// Ответ на выход из системы
message LogoutResponse {
  bool success = 1;
}
