apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: school-schedule-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    # Правила алертов
    rule_files:
    - "/etc/prometheus/rules/*.yml"
    
    # AlertManager конфигурация
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093
    
    # Конфигурация scraping
    scrape_configs:
    # IAM Service
    - job_name: 'iam-service'
      static_configs:
      - targets: ['iam-service:8080']
      metrics_path: '/metrics'
      scrape_interval: 10s
      scrape_timeout: 5s
    
    # RBAC Service  
    - job_name: 'rbac-service'
      static_configs:
      - targets: ['rbac-service:8080']
      metrics_path: '/metrics'
      scrape_interval: 10s
      scrape_timeout: 5s
    
    # PostgreSQL
    - job_name: 'postgres-iam'
      static_configs:
      - targets: ['postgres-iam:5432']
      metrics_path: '/metrics'
      scrape_interval: 30s
    
    - job_name: 'postgres-rbac'
      static_configs:
      - targets: ['postgres-rbac:5432']
      metrics_path: '/metrics'
      scrape_interval: 30s
    
    # Redis Cluster
    - job_name: 'redis-cluster'
      static_configs:
      - targets: ['redis-cluster:6379']
      metrics_path: '/metrics'
      scrape_interval: 30s
    
    # Kafka
    - job_name: 'kafka'
      static_configs:
      - targets: ['kafka:9092']
      metrics_path: '/metrics'
      scrape_interval: 30s
    
    # OpenTelemetry Collector
    - job_name: 'otel-collector'
      static_configs:
      - targets: ['otel-collector:8888']
      metrics_path: '/metrics'
      scrape_interval: 30s
    
    # Kubernetes API Server
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: school-schedule-monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: web
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=15d'
        - '--web.enable-lifecycle'
        - '--web.enable-admin-api'
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: rules
          mountPath: /etc/prometheus/rules
        - name: storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: prometheus-config
      - name: rules
        configMap:
          name: prometheus-rules
      - name: storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: school-schedule-monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - name: web
    port: 9090
    targetPort: 9090
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: school-schedule-monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: school-schedule-monitoring
